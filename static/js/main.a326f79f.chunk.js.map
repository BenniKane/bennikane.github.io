{"version":3,"sources":["Login/Login.js","Backlog/Backlog.js","MetricsDashboard/MetricsDashboard.js","ProjectRoot/ProjectRoot.js","App/App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","react_default","a","createElement","Paper_default","className","loginCard","Component","withStyles","theme","width","ProjectRoot","handleAddTask","e","stopPropagation","iterations","_this2","_this$state","appMaxHeight","Grid_default","container","fullHeight","direction","justify","alignItems","spacing","item","metricsContainer","elevation","align","metricsPaper","Typography_default","variant","backlog","Table_default","table","TableHead_default","tableHead","TableRow_default","tableRow","TableCell_default","style","maxWidth","minWidth","TableBody_default","tableBody","map","story","key","ExpansionPanel_default","expansionPanel","expanded","expansionPanelExpanded","ExpansionPanelSummary_default","expansionPanelSummary","content","expansionPanelSummaryConent","taskTableBody","IconButton_default","onClick","Icon_default","ExpansionPanelDetails_default","expansionPanelDetails","task","tableRowTask","height","overflow","flexGrow","zIndex","position","display","appBar","drawer","backgroundColor","appBody","objectSpread","marginTop","palette","background","default","mixins","toolbar","padding","unit","transparent","fullWidth","boxShadow","paddingRight","overflowY","margin","metrics","xs","metricBoxLarge","BrowserRouter","AppBar_default","color","Toolbar_default","Drawer_default","paper","List_default","component","Link","to","ListItem_default","button","ListItemIcon_default","ListItemText_default","primary","Route","exact","path","MetricsDashboard","Backlog","App","root","src_ProjectRoot_ProjectRoot","rootMaxHeight","loginPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uNAYMA,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,QAAST,EAAMS,SAHJR,wEAMV,IACEQ,EAAWL,KAAKI,MAAhBC,QAEP,OACIC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOG,UAAWL,EAAQM,WAA1B,kCAXQC,gBAsBLC,qBA5BA,SAAAC,GAAK,MAAK,CACrBH,UAAW,CACPI,MAAO,SA0BAF,CAAmBlB,8UCgF5BqB,eACF,SAAAA,EAAYpB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACfnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KAQVqB,cAAgB,SAAAC,GACZA,EAAEC,mBAPFtB,EAAKO,MAAQ,CACTC,QAAST,EAAMS,QACfe,WAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,KALnCvB,wEAaV,IAAAwB,EAAArB,KAAAsB,EAC2BtB,KAAKI,MAA7BC,EADHiB,EACGjB,QAASe,EADZE,EACYF,WAEjB,OACId,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQkB,cACpBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMkB,WAAS,EAACf,UAAWL,EAAQqB,YAC/BpB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACIG,UAAWL,EAAQqB,WACnBD,WAAS,EACTE,UAAU,SACVC,QAAQ,WACRC,WAAW,SACXC,QAAS,GAETxB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACIwB,MAAI,EACJrB,UAAWL,EAAQ2B,kBAEnB1B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACI0B,UAAW,EACXC,MAAM,SACNxB,UAAWL,EAAQ8B,cAEnB7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,MAApB,aAKR/B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CACIwB,MAAI,EACJrB,UAAWL,EAAQiC,SAEnBhC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAO0B,UAAW,EAAGC,MAAM,SAASxB,UAAWL,EAAQqB,YACnDpB,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAAOG,UAAWL,EAAQmC,OACtBlC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAWG,UAAWL,EAAQqC,WAC1BpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAUG,UAAWL,EAAQuC,UACzBtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,SAG3D1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,MAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,SAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,UAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,mBAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,WAKR1C,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAWG,UAAWL,EAAQ6C,WACtB9B,EAAW+B,IAAI,SAACC,GAChB,OACA9C,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAU8C,IAAK,SAASD,EAAO1C,UAAWL,EAAQuC,UAC9CtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWG,UAAWL,EAAQuC,UAC1BtC,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CAAgBG,UAAWL,EAAQkD,eAAgBlD,QAAS,CAACmD,SAASnD,EAAQoD,yBAC1EnD,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CAAuBG,UAAWL,EAAQsD,sBAAuBtD,QAAS,CAACuD,QAAQvD,EAAQwD,8BACvFvD,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,KACID,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAWG,UAAWL,EAAQyD,eAC1BxD,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAWG,UAAWL,EAAQuC,UAC1BtC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QACvD1C,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMkB,WAAS,EAACG,QAAQ,iBACpBtB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAYyD,QAAS3C,EAAKJ,eACtBX,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,eAMZD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,MAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,KAAMC,SAAS,OAA1D,SAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,UAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,mBAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,aAOhB1C,EAAAC,EAAAC,cAAC0D,GAAA3D,EAAD,CAAuBG,UAAWL,EAAQ8D,uBACtC7D,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAAOG,UAAWL,EAAQmC,OACtBlC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CAAWG,UAAWL,EAAQ6C,WACtB9B,EAAW+B,IAAI,SAACiB,GAChB,OACI9D,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAU8C,IAAK,SAASD,EAAM,SAASgB,EAAM1D,UAAWL,EAAQgE,cAC5D/D,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QACvD1C,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMkB,WAAS,EAACG,QAAQ,iBACpBtB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAYyD,QAAS3C,EAAKJ,eACtBX,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,eAMZD,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,MAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,KAAMC,SAAS,OAA1D,SAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,UAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,mBAGA1C,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,MAAO,CAAC/B,MAAO,MAAOgC,SAAU,MAAOC,SAAS,QAA3D,kCAvItDpC,aAsKXC,wBAvQA,SAAAC,GAAK,MAAK,CACrBS,aAAc,CACV+C,OAAQ,OACRC,SAAU,SACVC,SAAU,EACVC,OAAQ,EACRC,SAAU,WACVC,QAAS,QAEbC,OAAQ,CACJH,OAAQ3D,EAAM2D,OAAOI,OAAS,EAC9BC,gBAAiB,WAErBD,OAAQ,CACJH,SAAU,WACV3D,MAAO,QACPuD,OAAQ,QAEZS,QAAQjF,OAAAkF,EAAA,EAAAlF,CAAA,CACJmF,UAAW,OACXX,OAAQ,oBACRE,SAAU,EACVM,gBAAiBhE,EAAMoE,QAAQC,WAAWC,QAC1CT,QAAS,QACN7D,EAAMuE,OAAOC,SAEpBtD,iBAAkB,CACduD,QAA8B,EAArBzE,EAAMgB,QAAQ0D,KACvBlB,OAAQ,MACRvD,MAAO,OACP+D,gBAAiB,oBAErBW,YAAa,CACTX,gBAAiB,oBAErBxC,QAAS,CACLgC,OAAQ,MACRvD,MAAO,QAEX2E,UAAW,CACP3E,MAAO,QAEXW,WAAY,CACR4C,OAAQ,QAEZnC,aAAc,CACV2C,gBAAiB,mBACjBR,OAAQ,OACRqB,UAAW,QAEfnD,MAAO,CACHmC,QAAS,SAEbjC,UAAW,CACPiC,QAAS,QACT5D,MAAO,OACP6E,aAAc,QAElB1C,UAAW,CACP2C,UAAW,SACXvB,OAAQ,qBACRK,QAAS,QACT5D,MAAO,QAEX6B,SAAU,CACN+B,QAAS,QACT5D,MAAO,OACPuD,OAAQ,QAEZD,aAAc,CACVM,QAAS,QACT5D,MAAO,OACP+D,gBAAiB,UACjBR,OAAQ,QAEZf,eAAgB,CACZgC,QAAS,OAEb9B,uBAAwB,CACpBqC,OAAQ,OAEZnC,sBAAuB,CACnB4B,QAAS,kBAEbpB,sBAAuB,CACnBoB,QAAS,OAEb1B,4BAA6B,CACzBiC,OAAQ,kBAEZhC,cAAe,CACXQ,OAAQ,OACRvD,MAAO,QAEXuE,QAASxE,EAAMuE,OAAOC,UAyKXzE,CAAmBG,kCCtO5BA,eACF,SAAAA,EAAYpB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACfnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,QAAST,EAAMS,SAJJR,wEAQV,IACGQ,EAAYL,KAAKI,MAAjBC,QAER,OACIC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQkB,cACpBjB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMkB,WAAS,GACXnB,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMkB,WAAS,EAACK,QAAS,GAAIpB,UAAWL,EAAQ0F,SAC5CzF,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMwB,MAAI,EAACiE,GAAI,GACX1F,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAO0B,UAAW,EAAGC,MAAM,SAASxB,UAAWL,EAAQ4F,gBACnD3F,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,MAApB,cAKR/B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMwB,MAAI,EAACiE,GAAI,GACX1F,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAO0B,UAAW,EAAGC,MAAM,SAASxB,UAAWL,EAAQ4F,gBACnD3F,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,MAApB,qBAKR/B,EAAAC,EAAAC,cAACgB,EAAAjB,EAAD,CAAMwB,MAAI,EAACiE,GAAI,IACX1F,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAO0B,UAAW,EAAGC,MAAM,SAASxB,UAAWL,EAAQ4F,gBACnD3F,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAY8B,QAAQ,MAApB,wBAhCNzB,aAgDXC,wBAnFA,SAAAC,GAAK,MAAK,CACrBS,aAAc,CACV+C,OAAQ,OACRC,SAAU,SACVC,SAAU,EACVC,OAAQ,EACRC,SAAU,WACVC,QAAS,QAEbC,OAAQ,CACJH,OAAQ3D,EAAM2D,OAAOI,OAAS,EAC9BC,gBAAiB,WAErBD,OAAQ,CACJH,SAAU,WACV3D,MAAO,QACPuD,OAAQ,QAEZS,QAAQjF,OAAAkF,EAAA,EAAAlF,CAAA,CACJmF,UAAW,OACXX,OAAQ,oBACRE,SAAU,EACVM,gBAAiBhE,EAAMoE,QAAQC,WAAWC,QAC1CT,QAAS,QACN7D,EAAMuE,OAAOC,SAEpBS,QAAS,CACLR,QAA8B,EAArBzE,EAAMgB,QAAQ0D,MAE3BS,eAAgB,CACZ3B,OAAQ,QAEZgB,QAASxE,EAAMuE,OAAOC,UAmDXzE,CAAmBG,IC/C5BA,eACF,SAAAA,EAAYpB,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,IACfnB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,QAAST,EAAMS,SAJJR,wEAQV,IACGQ,EAAYL,KAAKI,MAAjBC,QAER,OACIC,EAAAC,EAAAC,cAAC0F,GAAA,EAAD,KACI5F,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQkB,cACpBjB,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CAAQmE,SAAS,WAAWhE,UAAWL,EAAQuE,OAAQwB,MAAM,WACzD9F,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,kBAIJD,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,CACI8B,QAAQ,YACRhC,QAAS,CACLkG,MAAOlG,EAAQwE,SAGnBvE,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQiF,UACxBhF,EAAAC,EAAAC,cAACgG,EAAAjG,EAAD,CAAMkG,UAAU,OACZnG,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,GAAG,cACLrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CAAUsG,QAAM,GACZvG,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,mBAIJD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAcyG,QAAQ,gBAG9B1G,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAMC,GAAG,YACLrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CAAUsG,QAAM,GACZvG,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,mBAIJD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAcyG,QAAQ,cAG9B1G,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,CAAUsG,QAAM,GACZvG,EAAAC,EAAAC,cAACsG,EAAAvG,EAAD,KACID,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,qBAIJD,EAAAC,EAAAC,cAACuG,EAAAxG,EAAD,CAAcyG,QAAQ,sBAIlC1G,EAAAC,EAAAC,cAAA,QAAMoB,QAAQ,SAASE,QAAS,EAAGpB,UAAWL,EAAQ0E,SAClDzE,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQiF,UACxBhF,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAO5D,IAAI,gBAAgB6D,OAAK,EAACC,KAAK,IAAIV,UAAWW,KACrD9G,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAO5D,IAAI,YAAY6D,OAAK,EAACC,KAAK,aAAaV,UAAWW,KAC1D9G,EAAAC,EAAAC,cAACyG,GAAA,EAAD,CAAO5D,IAAI,UAAU8D,KAAK,WAAWV,UAAWY,eA9D9CzG,aA0EXC,wBA7GA,SAAAC,GAAK,MAAK,CACrBS,aAAc,CACV+C,OAAQ,OACRC,SAAU,SACVC,SAAU,EACVC,OAAQ,EACRC,SAAU,WACVC,QAAS,QAEbC,OAAQ,CACJH,OAAQ3D,EAAM2D,OAAOI,OAAS,EAC9BC,gBAAiB,WAErBD,OAAQ,CACJH,SAAU,WACV3D,MAAO,QACPuD,OAAQ,QAEZS,QAAQjF,OAAAkF,EAAA,EAAAlF,CAAA,CACJmF,UAAW,OACXX,OAAQ,oBACRE,SAAU,EACVM,gBAAiBhE,EAAMoE,QAAQC,WAAWC,QAC1CT,QAAS,QACN7D,EAAMuE,OAAOC,SAEpBS,QAAS,CACLR,QAA8B,EAArBzE,EAAMgB,QAAQ0D,MAE3BS,eAAgB,CACZ3B,OAAQ,QAEZgB,QAASxE,EAAMuE,OAAOC,UA6EXzE,CAAmBG,ICnG5BsG,eACF,SAAAA,EAAY1H,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsH,IACfzH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwH,GAAAnH,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,QAAST,EAAMS,SAJJR,wEAOV,IACGQ,EAAYL,KAAKI,MAAjBC,QAGR,OACAC,EAAAC,EAAAC,cAAA,OAAKE,UAAWL,EAAQkH,KAAMzE,MAAO,CAACwB,OAAS,SAQvChE,EAAAC,EAAAC,cAACgH,GAAD,cArBE5G,aAgCHC,wBAlDA,SAAAC,GAAK,MAAK,CACrByG,KAAK,CACD/C,SAAU,EACVE,SAAU,YAEd+C,cAAe,CACXnD,OAAQ,KAEZoD,UAAW,CACPpD,OAAQ,OACRQ,gBAAiB,aAErBvD,aAAc,CACV+C,OAAQ,OACRC,SAAU,YAoCH1D,CAAmByG,IC9CdK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3H,EAAAC,EAAAC,cAAC0H,GAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a326f79f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = theme => ({\r\n    loginCard: {\r\n        width: '50%'\r\n    }\r\n})\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classes: props.classes\r\n        }\r\n    }\r\n    render() {\r\n        const {classes} = this.state;\r\n\r\n        return (\r\n            <Paper className={classes.loginCard}>\r\n                This is the login page?\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Login);","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel'\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails'\r\n\r\nconst styles = theme => ({\r\n    appMaxHeight: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        flexGrow: 1,\r\n        zIndex: 1,\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#0b7233'\r\n    },\r\n    drawer: {\r\n        position: 'relative',\r\n        width: '240px',\r\n        height: '100%'\r\n    },\r\n    appBody: {\r\n        marginTop: '64px',\r\n        height: 'calc(100% - 64px)',\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        display: 'flex',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    metricsContainer: {\r\n        padding: theme.spacing.unit * 3,\r\n        height: '30%',\r\n        width: '100%',\r\n        backgroundColor: 'rgba(0, 0, 0, 0)'\r\n    },\r\n    transparent: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0)'\r\n    },\r\n    backlog: {\r\n        height: '70%',\r\n        width: '100%'\r\n    },\r\n    fullWidth: {\r\n        width: '100%'\r\n    },\r\n    fullHeight: {\r\n        height: '100%'\r\n    },\r\n    metricsPaper: {\r\n        backgroundColor: 'rgba(0, 0, 0, 0)',\r\n        height: '100%',\r\n        boxShadow: 'none'\r\n    },\r\n    table: {\r\n        display: 'block'\r\n    },\r\n    tableHead: {\r\n        display: 'block',\r\n        width: '100%',\r\n        paddingRight: '45px'\r\n    },\r\n    tableBody: {\r\n        overflowY: 'scroll',\r\n        height: 'calc(660px - 56px)',\r\n        display: 'block',\r\n        width: '100%' \r\n    },\r\n    tableRow: {\r\n        display: 'table',\r\n        width: '100%',\r\n        height: '64px'\r\n    },\r\n    tableRowTask: {\r\n        display: 'table',\r\n        width: '100%',\r\n        backgroundColor: '#f3f3f3',\r\n        height: '64px'\r\n    },\r\n    expansionPanel: {\r\n        padding: '0px'\r\n    },\r\n    expansionPanelExpanded: {\r\n        margin: '0px'\r\n    },\r\n    expansionPanelSummary: {\r\n        padding: '0px !important'\r\n    },\r\n    expansionPanelDetails: {\r\n        padding: '0px'\r\n    },\r\n    expansionPanelSummaryConent: {\r\n        margin: '0px !important'\r\n    },\r\n    taskTableBody: {\r\n        height: '100%',\r\n        width: '100%' \r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n})\r\n\r\nclass ProjectRoot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: props.classes,\r\n            iterations: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\r\n        }\r\n    }\r\n\r\n    handleAddTask = e => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const { classes, iterations } = this.state;\r\n\r\n        return (\r\n            <div className={classes.appMaxHeight}>  \r\n                <Grid container className={classes.fullHeight}>\r\n                    <Grid \r\n                        className={classes.fullHeight} \r\n                        container \r\n                        direction='column' \r\n                        justify='flex-end' \r\n                        alignItems='center' \r\n                        spacing={0}\r\n                    >\r\n                        <Grid \r\n                            item \r\n                            className={classes.metricsContainer}\r\n                        >\r\n                            <Paper \r\n                                elevation={2} \r\n                                align='center' \r\n                                className={classes.metricsPaper}\r\n                            >\r\n                                <Typography variant='h3'>\r\n                                    Details\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid \r\n                            item \r\n                            className={classes.backlog}\r\n                        >\r\n                            <Paper elevation={2} align='center' className={classes.fullHeight}>\r\n                                <Table className={classes.table}>\r\n                                    <TableHead className={classes.tableHead}>\r\n                                        <TableRow className={classes.tableRow}>\r\n                                            <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                \r\n                                            </TableCell>\r\n                                            <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                Id\r\n                                            </TableCell>\r\n                                            <TableCell style={{width: '50%', maxWidth: '50%', minWidth:'50%'}}>\r\n                                                Title\r\n                                            </TableCell>\r\n                                            <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                Effort\r\n                                            </TableCell>\r\n                                            <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                Hours Remaining\r\n                                            </TableCell>\r\n                                            <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                State\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody className={classes.tableBody}>\r\n                                        {   iterations.map((story) => {\r\n                                            return ( \r\n                                            <TableRow key={'story-'+story} className={classes.tableRow}>\r\n                                                <TableCell className={classes.tableRow}>\r\n                                                    <ExpansionPanel className={classes.expansionPanel} classes={{expanded:classes.expansionPanelExpanded}}>\r\n                                                        <ExpansionPanelSummary className={classes.expansionPanelSummary} classes={{content:classes.expansionPanelSummaryConent}}>\r\n                                                            <Table>\r\n                                                                <TableBody className={classes.taskTableBody}>\r\n                                                                    <TableRow  className={classes.tableRow}>\r\n                                                                        <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                            <Grid container justify='space-between'>\r\n                                                                                <IconButton onClick={this.handleAddTask}>\r\n                                                                                    <Icon>\r\n                                                                                        add\r\n                                                                                    </Icon>\r\n                                                                                </IconButton>\r\n                                                                            </Grid>\r\n                                                                        </TableCell>\r\n                                                                        <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                            Id\r\n                                                                        </TableCell>\r\n                                                                        <TableCell style={{width: '50%', maxWidth: '50', minWidth:'50'}}>\r\n                                                                            Title\r\n                                                                        </TableCell>\r\n                                                                        <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                            Effort\r\n                                                                        </TableCell>\r\n                                                                        <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                            Hours Remaining\r\n                                                                        </TableCell>\r\n                                                                        <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                            State\r\n                                                                        </TableCell>\r\n                                                                    </TableRow>\r\n                                                                </TableBody>\r\n                                                            </Table>\r\n                                                        </ExpansionPanelSummary>\r\n                                                        <ExpansionPanelDetails className={classes.expansionPanelDetails}>\r\n                                                            <Table className={classes.table}>\r\n                                                                <TableBody className={classes.tableBody}>\r\n                                                                    {   iterations.map((task) => {\r\n                                                                        return (\r\n                                                                            <TableRow key={'story-'+story+'-task-'+task} className={classes.tableRowTask}>\r\n                                                                                <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                                    <Grid container justify='space-between'>\r\n                                                                                        <IconButton onClick={this.handleAddTask}>\r\n                                                                                            <Icon>\r\n                                                                                                add\r\n                                                                                            </Icon>\r\n                                                                                        </IconButton>\r\n                                                                                    </Grid>\r\n                                                                                </TableCell>\r\n                                                                                <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                                    Id\r\n                                                                                </TableCell>\r\n                                                                                <TableCell style={{width: '50%', maxWidth: '50', minWidth:'50'}}>\r\n                                                                                    Title\r\n                                                                                </TableCell>\r\n                                                                                <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                                    Effort\r\n                                                                                </TableCell>\r\n                                                                                <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                                    Hours Remaining\r\n                                                                                </TableCell>\r\n                                                                                <TableCell style={{width: '10%', maxWidth: '10%', minWidth:'10%'}}>\r\n                                                                                    State\r\n                                                                                </TableCell>\r\n                                                                            </TableRow> )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </TableBody>\r\n                                                            </Table>\r\n                                                        </ExpansionPanelDetails>\r\n                                                    </ExpansionPanel>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n\r\n                                            )\r\n                                            })\r\n                                        }\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectRoot.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectRoot);","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n    appMaxHeight: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        flexGrow: 1,\r\n        zIndex: 1,\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#0b7233'\r\n    },\r\n    drawer: {\r\n        position: 'relative',\r\n        width: '240px',\r\n        height: '100%'\r\n    },\r\n    appBody: {\r\n        marginTop: '64px',\r\n        height: 'calc(100% - 64px)',\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        display: 'flex',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    metrics: {\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    metricBoxLarge: {\r\n        height: '100%'\r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n})\r\n\r\nclass ProjectRoot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: props.classes\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.state;\r\n\r\n        return (\r\n            <div className={classes.appMaxHeight}>   \r\n                <Grid container>\r\n                    <Grid container spacing={24} className={classes.metrics}>\r\n                        <Grid item xs={6}>\r\n                            <Paper elevation={2} align='center' className={classes.metricBoxLarge}>\r\n                                <Typography variant='h3'>\r\n                                    Burndown\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Paper elevation={2} align='center' className={classes.metricBoxLarge}>\r\n                                <Typography variant='h3'>\r\n                                    Avg Sprint Info\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Paper elevation={2} align='center' className={classes.metricBoxLarge}>\r\n                                <Typography variant='h3'>\r\n                                    My Tasks\r\n                                </Typography>\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectRoot.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectRoot);","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport Backlog from '../Backlog/Backlog';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport MetricsDashboard from '../MetricsDashboard/MetricsDashboard';\r\n\r\nconst styles = theme => ({\r\n    appMaxHeight: {\r\n        height: '100%',\r\n        overflow: 'hidden',\r\n        flexGrow: 1,\r\n        zIndex: 1,\r\n        position: 'relative',\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        backgroundColor: '#0b7233'\r\n    },\r\n    drawer: {\r\n        position: 'relative',\r\n        width: '240px',\r\n        height: '100%'\r\n    },\r\n    appBody: {\r\n        marginTop: '64px',\r\n        height: 'calc(100% - 64px)',\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.default,\r\n        display: 'flex',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    metrics: {\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    metricBoxLarge: {\r\n        height: '100%'\r\n    },\r\n    toolbar: theme.mixins.toolbar\r\n})\r\n\r\nclass ProjectRoot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: props.classes\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.state;\r\n\r\n        return (\r\n            <Router>\r\n                <div className={classes.appMaxHeight}>\r\n                    <AppBar position='absolute' className={classes.appBar} color='default'>\r\n                        <Toolbar>\r\n                            Toolbar!\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer \r\n                        variant=\"permanent\"\r\n                        classes={{\r\n                            paper: classes.drawer,\r\n                        }}\r\n                        >\r\n                        <div className={classes.toolbar} />\r\n                        <List component='nav'>\r\n                            <Link to='/dashboard'>\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <Icon>\r\n                                            dashboard\r\n                                        </Icon>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary='Dashboard'/>\r\n                                </ListItem>\r\n                            </Link>\r\n                            <Link to='/backlog'>\r\n                                <ListItem button>\r\n                                    <ListItemIcon>\r\n                                        <Icon>\r\n                                            view_list\r\n                                        </Icon>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary='Backlog'/>\r\n                                </ListItem>\r\n                            </Link>\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <Icon>\r\n                                        view_column\r\n                                    </Icon>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary='Current Sprint'/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Drawer>\r\n                    <main justify='center' spacing={0} className={classes.appBody}> \r\n                        <div className={classes.toolbar} />\r\n                        <Route key='default-route' exact path='/' component={MetricsDashboard} />\r\n                        <Route key='dashboard' exact path='/dashboard' component={MetricsDashboard} />\r\n                        <Route key='backlog' path='/backlog' component={Backlog} />\r\n                    </main>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nProjectRoot.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProjectRoot);","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Login from '../Login/Login';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport ProjectRoot from '../ProjectRoot/ProjectRoot';\n\nconst styles = theme => ({\n    root:{\n        flexGrow: 1,\n        position: 'relative'\n    },\n    rootMaxHeight: {\n        height: 100\n    },\n    loginPage: {\n        height: '100%',\n        backgroundColor: 'lightgray'\n    },\n    appMaxHeight: {\n        height: '100%',\n        overflow: 'hidden'\n    }\n})\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            classes: props.classes\n        }\n    }\n    render() {\n        const { classes } = this.state;\n        const loggedIn = true;\n\n        return (\n        <div className={classes.root} style={{'height':'100%'}}>\n            {!loggedIn ? \n            (\n                <Grid className={classes.loginPage} container justify='center' alignItems='center' spacing={0} >\n                    <Login />\n                </Grid>\n            ) : \n            ( \n                <ProjectRoot />\n            )}\n        </div>\n        );\n    }\n}\n\nApp.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App//App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}